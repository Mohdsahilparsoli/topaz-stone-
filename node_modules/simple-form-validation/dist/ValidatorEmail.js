import Validator from"./Validator";export default class ValidatorEmail extends Validator{constructor(defaultMessage){super(defaultMessage)}valid(message){const regexEmail=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return this.addStep("email",v=>regexEmail.test(String(v).toLowerCase()),message),this}notFrom(domains,message){var domainValue=null;return domainValue="string"==typeof domains&&-1!==domains.indexOf(",")?domains.split(","):domains instanceof Array?domains:[domains],this.addStep("notFrom",function(v){let domainListLength=domainValue.length;for(;--domainListLength;)if(v.endsWith(domainValue[domainListLength]))return!1;return!0},message),this}};