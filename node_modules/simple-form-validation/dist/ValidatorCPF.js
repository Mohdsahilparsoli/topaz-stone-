import Validator from"./Validator";export default class ValidatorCPF extends Validator{constructor(defaultMessage){super(defaultMessage)}valid(message){this.addStep("cpf",function(v){return validate(v)},message)}};function calcDigit(firstNineDigits){const _1stDigit=calcDigit1(firstNineDigits);return""+_1stDigit+calcDigit2(firstNineDigits+_1stDigit)}function calcDigit1(firstNineDigits){for(var sum=0,j=0;j<9;++j)sum+=firstNineDigits.toString().charAt(j)*(10-j);const sumChecker=sum%11;return(sumChecker<2?0:11-sumChecker).toString()}function calcDigit2(cpfWithChecker1){for(var sum=0,k=0;k<10;++k)sum+=cpfWithChecker1.toString().charAt(k)*(11-k);const sumChecker=sum%11;return(sumChecker<2?0:11-sumChecker).toString()}function validate(value){const cpf=(value=String(value)).replace(/\.|-|\s/g,"");if(11!==cpf.length)return!1;const firstNineDigits=cpf.substring(0,9),checker=cpf.substring(9,11);cpf.substring(0,1);return!/^(.)\1+$/.test(cpf)&&checker===calcDigit(firstNineDigits)}